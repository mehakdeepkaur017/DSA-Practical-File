#include <stdio.h>
#include <stdlib.h>
#define MAX 5

int stack[MAX];
int top = -1;

void push(int item) {
    if (top == MAX - 1)
        printf("\nStack Overflow! Cannot push %d\n", item);
    else {
        top++;
        stack[top] = item;
        printf("\n%d pushed onto stack.\n", item);
    }
}

void pop() {
    if (top == -1)
        printf("\nStack Underflow! Cannot pop element.\n");
    else {
        printf("\nPopped element: %d\n", stack[top]);
        top--;
    }
}

void display() {
    if (top == -1)
        printf("\nStack is Empty.\n");
    else {
        printf("\nStack elements are:\n");
        for (int i = top; i >= 0; i--)
            printf("%d\n", stack[i]);
    }
}

void checkPalindrome() {
    int num, temp, digit, rev = 0;
    int localStack[MAX], localTop = -1;
    printf("\nEnter a number to check Palindrome: ");
    scanf("%d", &num);
    temp = num;
    while (temp > 0) {
        if (localTop == MAX - 1) {
            printf("\nLocal Stack Overflow! Number too long.\n");
            return;
        }
        digit = temp % 10;
        localStack[++localTop] = digit;
        temp /= 10;
    }
    while (localTop != -1)
        rev = rev * 10 + localStack[localTop--];
    if (rev == num)
        printf("\n%d is a Palindrome number.\n", num);
    else
        printf("\n%d is NOT a Palindrome number.\n", num);
}

int main() {
    int choice, value;
    while (1) {
        printf("\n--- STACK OPERATIONS MENU ---");
        printf("\n1. Push an Element");
        printf("\n2. Pop an Element");
        printf("\n3. Display Stack");
        printf("\n4. Check Palindrome using Stack");
        printf("\n5. Exit");
        printf("\nEnter your choice: ");
        scanf("%d", &choice);
        switch (choice) {
            case 1:
                printf("Enter element to push: ");
                scanf("%d", &value);
                push(value);
                break;
            case 2:
                pop();
                break;
            case 3:
                display();
                break;
            case 4:
                checkPalindrome();
                break;
            case 5:
                printf("\nExiting Program...\n");
                exit(0);
            default:
                printf("\nInvalid choice! Please try again.\n");
        }
    }
    return 0;
}

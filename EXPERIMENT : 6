#include <stdio.h>

#define MAX 100

char STR[MAX], PAT[MAX], REP[MAX], RESULT[MAX];

void readStrings() {
    printf("Enter the main string (STR): ");
    scanf(" %[^\n]", STR);
    printf("Enter the pattern string (PAT): ");
    scanf(" %[^\n]", PAT);
    printf("Enter the replace string (REP): ");
    scanf(" %[^\n]", REP);
}
int length(char s[]) {
    int i = 0;
    while (s[i] != '\0')
        i++;
    return i;
}
int matchAt(char STR[], char PAT[], int start) {
    int i = 0;
    while (PAT[i] != '\0') {
        if (STR[start + i] != PAT[i])
            return 0;
        i++;

}
    return 1; }
void findAndReplace() {
    int i = 0, j = 0, k;
    int found = 0;
    int lenSTR = length(STR);
    int lenPAT = length(PAT);
    int lenREP = length(REP);

    while (i < lenSTR) {
        if (matchAt(STR, PAT, i)) {
            found = 1;
            for (k = 0; k < lenREP; k++)
                RESULT[j++] = REP[k];
            i += lenPAT;
        } else {
            RESULT[j++] = STR[i++];
        }
    }

    RESULT[j] = '\0';
    if (found)
        printf("\nResultant String after Replacement: %s\n", RESULT);
    else
        printf("\nPattern not found in the main string.\n");
}
int main() {
    readStrings();
    findAndReplace();
    return 0;
}
